  version: "3"
  services:
    django:
      build: .
      container_name: RegisterApi
      ports:
        - "8002:8002"
      volumes:
        - .:/app
        - static_volume:/usr/src/app/back-static
        - media_volumes:/usr/src/app/back-media
      restart: always
#      depends_on:
#        - pgdb
      command: sh -c "python3 manage.py makemigrations && python3 manage.py migrate && gunicorn config.wsgi:application --bind 0.0.0.0:8002"

#    pgdb:
#      image: postgres:alpine3.19
#      environment:
#        POSTGRES_DB: ${POSTGRES_NAME}
#        POSTGRES_USER: ${POSTGRES_USER}
#        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#
#      container_name: pgdb
#      volumes:
#        - db_data:/var/lib/postgresql/data/
#      ports:
#        - "5438:5432"


    nginx:
      image: nginx
      ports:
        - 80:80
      volumes:
        - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
        - static_volume:/usr/src/app/back-static
        - media_volumes:/usr/src/app/back-media
      depends_on:
        - django


    redis:
      restart: unless-stopped
      image: redis:7.0.5-alpine
      expose:
        - 6379

    worker:
      restart: unless-stopped
      build:
        context: .
        dockerfile: ./docker/backend/Dockerfile
      entrypoint: /app/docker/backend/worker-entrypoint.sh
      volumes:
        - static_volume:/app/backend/django_static
      environment:
        DEBUG: "True"
        CELERY_BROKER_URL: "redis://redis:6379/0"
        CELERY_RESULT_BACKEND: "redis://redis:6379/0"
        DJANGO_DB: postgresql
        POSTGRES_HOST: db
        POSTGRES_NAME: postgres
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_PORT: 5432
      depends_on:
        - server
        - redis
  volumes:
    static_volume:
    media_volumes:
    db_data:
